// <auto-generated />
using System;
using Hospital_Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hospital_Web.Migrations
{
    [DbContext(typeof(Hospital_WebContext))]
    [Migration("20250504181153_InitialMigration2")]
    partial class InitialMigration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hospital_Web.Models.Consulta", b =>
                {
                    b.Property<int>("Episodio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Episodio"));

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gabinete")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("ID_Medico")
                        .HasColumnType("int");

                    b.Property<int>("ID_Utente")
                        .HasColumnType("int");

                    b.HasKey("Episodio");

                    b.HasIndex("Gabinete");

                    b.HasIndex("ID_Medico");

                    b.HasIndex("ID_Utente");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("Hospital_Web.Models.Funcionario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado_Civil")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Licenciatura")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefone2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ID");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Hospital_Web.Models.FuncionarioLimpeza", b =>
                {
                    b.Property<int>("ID_Funcionario")
                        .HasColumnType("int");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_Funcionario");

                    b.ToTable("FuncionarioLimpeza");
                });

            modelBuilder.Entity("Hospital_Web.Models.Gabinete", b =>
                {
                    b.Property<int>("N_Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("N_Identificador"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Equipamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("N_Identificador");

                    b.ToTable("Gabinete");
                });

            modelBuilder.Entity("Hospital_Web.Models.LimpezaSala", b =>
                {
                    b.Property<int>("Funcionario")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("Sala")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Produto1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Produto2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Produto3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Funcionario", "Sala");

                    b.HasIndex("Sala");

                    b.ToTable("LimpezaSala");
                });

            modelBuilder.Entity("Hospital_Web.Models.Medico", b =>
                {
                    b.Property<int>("ID_Medico")
                        .HasColumnType("int");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Medico");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Hospital_Web.Models.QuartoInternagem", b =>
                {
                    b.Property<int>("N_Identificador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("N_Identificador"));

                    b.Property<int?>("Capacidade")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ocupado")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("N_Identificador");

                    b.ToTable("QuartoInternagem");
                });

            modelBuilder.Entity("Hospital_Web.Models.RegistoClinico", b =>
                {
                    b.Property<int>("Episodio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Medico")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tratamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Utente")
                        .HasColumnType("int");

                    b.HasKey("Episodio");

                    b.HasIndex("Medico");

                    b.HasIndex("Utente");

                    b.ToTable("RegistoClinico");
                });

            modelBuilder.Entity("Hospital_Web.Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Andar")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Bloco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("Hospital_Web.Models.Utente", b =>
                {
                    b.Property<int>("N_Processo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("N_Processo"));

                    b.Property<DateTime?>("Data_Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado_Clinico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefone2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("N_Processo");

                    b.ToTable("Utente");
                });

            modelBuilder.Entity("Hospital_Web.Models.UtenteQuarto", b =>
                {
                    b.Property<int>("Utente")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("Quarto")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Utente", "Quarto");

                    b.HasIndex("Quarto");

                    b.ToTable("UtenteQuarto");
                });

            modelBuilder.Entity("Hospital_Web.Models.Consulta", b =>
                {
                    b.HasOne("Hospital_Web.Models.Gabinete", "GabineteNavigation")
                        .WithMany("Consultas")
                        .HasForeignKey("Gabinete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital_Web.Models.Medico", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("ID_Medico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital_Web.Models.Utente", "Utente")
                        .WithMany("Consultas")
                        .HasForeignKey("ID_Utente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GabineteNavigation");

                    b.Navigation("Medico");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("Hospital_Web.Models.FuncionarioLimpeza", b =>
                {
                    b.HasOne("Hospital_Web.Models.Funcionario", "Funcionario")
                        .WithOne("FuncionarioLimpeza")
                        .HasForeignKey("Hospital_Web.Models.FuncionarioLimpeza", "ID_Funcionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Hospital_Web.Models.LimpezaSala", b =>
                {
                    b.HasOne("Hospital_Web.Models.Funcionario", "FuncionarioNavigation")
                        .WithMany("LimpezasSalas")
                        .HasForeignKey("Funcionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital_Web.Models.Sala", "SalaNavigation")
                        .WithMany("LimpezasSalas")
                        .HasForeignKey("Sala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuncionarioNavigation");

                    b.Navigation("SalaNavigation");
                });

            modelBuilder.Entity("Hospital_Web.Models.Medico", b =>
                {
                    b.HasOne("Hospital_Web.Models.Funcionario", "Funcionario")
                        .WithOne("Medico")
                        .HasForeignKey("Hospital_Web.Models.Medico", "ID_Medico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Hospital_Web.Models.RegistoClinico", b =>
                {
                    b.HasOne("Hospital_Web.Models.Consulta", "ConsultaNavigation")
                        .WithMany("RegistosClinicos")
                        .HasForeignKey("Episodio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hospital_Web.Models.Medico", "MedicoNavigation")
                        .WithMany("RegistosClinicos")
                        .HasForeignKey("Medico")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Hospital_Web.Models.Utente", "UtenteNavigation")
                        .WithMany("RegistosClinicos")
                        .HasForeignKey("Utente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ConsultaNavigation");

                    b.Navigation("MedicoNavigation");

                    b.Navigation("UtenteNavigation");
                });

            modelBuilder.Entity("Hospital_Web.Models.UtenteQuarto", b =>
                {
                    b.HasOne("Hospital_Web.Models.QuartoInternagem", "QuartoNavigation")
                        .WithMany("UtentesQuartos")
                        .HasForeignKey("Quarto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hospital_Web.Models.Utente", "UtenteNavigation")
                        .WithMany("UtentesQuartos")
                        .HasForeignKey("Utente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuartoNavigation");

                    b.Navigation("UtenteNavigation");
                });

            modelBuilder.Entity("Hospital_Web.Models.Consulta", b =>
                {
                    b.Navigation("RegistosClinicos");
                });

            modelBuilder.Entity("Hospital_Web.Models.Funcionario", b =>
                {
                    b.Navigation("FuncionarioLimpeza")
                        .IsRequired();

                    b.Navigation("LimpezasSalas");

                    b.Navigation("Medico")
                        .IsRequired();
                });

            modelBuilder.Entity("Hospital_Web.Models.Gabinete", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("Hospital_Web.Models.Medico", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("RegistosClinicos");
                });

            modelBuilder.Entity("Hospital_Web.Models.QuartoInternagem", b =>
                {
                    b.Navigation("UtentesQuartos");
                });

            modelBuilder.Entity("Hospital_Web.Models.Sala", b =>
                {
                    b.Navigation("LimpezasSalas");
                });

            modelBuilder.Entity("Hospital_Web.Models.Utente", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("RegistosClinicos");

                    b.Navigation("UtentesQuartos");
                });
#pragma warning restore 612, 618
        }
    }
}
