@{
    ViewData["Title"] = "Painel Principal";
}

@using Microsoft.AspNetCore.Identity
@using Hospital_Web.Models
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    bool isUtente = user?.UtenteId != null;
    bool isMedico = user?.MedicoId != null;
    bool isFuncionarioLimpeza = user?.FuncionarioLimpezaId != null;
}

@if ((bool)(ViewBag.DeveAlterarSenha ?? false))
{
    <div class="alert alert-warning mt-5 shadow-sm rounded">
        <h4 class="mb-3"><i class="bi bi-exclamation-triangle-fill me-2"></i>Alterar senha obrigatória</h4>
        <form method="post" asp-action="AlterarSenha">
            <div class="form-group mb-3">
                <label class="form-label">Nova senha</label>
                <input type="password" name="novaSenha" class="form-control shadow-sm" required />
            </div>
            <div class="form-group mb-4">
                <label class="form-label">Confirmar nova senha</label>
                <input type="password" name="confirmarSenha" class="form-control shadow-sm" required />
            </div>
            <button type="submit" class="btn btn-primary w-100">Guardar</button>
        </form>
    </div>
}

<div class="container mt-5">
    <h1 class="text-center mb-3 text-primary display-5">🏥 Sistema Hospitalar</h1>
    <p class="text-center text-muted mb-5 fs-5">Escolha uma área para gerir</p>

    <div class="row row-cols-1 row-cols-md-3 g-4 justify-content-center">
        @if (isUtente)
        {
            <div class="col d-flex justify-content-center">
                <div class="w-100" style="max-width: 300px;">
                    <partial name="_MenuCard" model="@(Tuple.Create("Consultas", "Consultas", "Index"))" />
                </div>
            </div>
        }
        else if (isFuncionarioLimpeza)
        {
            <div class="col d-flex justify-content-center">
                <div class="w-100" style="max-width: 300px;">
                    <partial name="_MenuCard" model="@(Tuple.Create("Limpeza de Salas", "LimpezaSalas", "Index"))" />
                </div>
            </div>
        }
        else if (isMedico)
        {
            <partial name="_MenuCard" model="@(Tuple.Create("Consultas", "Consultas", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Internamentos", "Internamentos", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Quartos de Internamento", "QuartosInternagems", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Gabinetes", "Gabinetes", "Index"))" />
        }
        else
        {
            <partial name="_MenuCard" model="@(Tuple.Create("Consultas", "Consultas", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Funcionários de Limpeza", "FuncionarioLimpezas", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Gabinetes", "Gabinetes", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Internamentos", "Internamentos", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Limpeza de Salas", "LimpezaSalas", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Médicos", "Medicos", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Pessoas", "Pessoas", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Quartos de Internamento", "QuartosInternagems", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Salas", "Salas", "Index"))" />
            <partial name="_MenuCard" model="@(Tuple.Create("Utentes", "Utentes", "Index"))" />
        }
    </div>
</div>
<style>
    /* Flat, clean hospital-like style */
    body {
        background-color: #f8f9fa; /* light gray */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .card, .form-control, .btn, .alert {
        border-radius: 0 !important; /* Remove rounded corners */
    }

    .card {
        border: 1px solid #dee2e6;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.08);
        }

    .card-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #0d6efd;
    }

    .btn {
        font-weight: 500;
        text-transform: uppercase;
    }

    .btn-outline-primary {
        border-color: #0d6efd;
        color: #0d6efd;
    }

        .btn-outline-primary:hover {
            background-color: #0d6efd;
            color: #fff;
        }

    .alert-warning {
        border: 1px solid #ffc107;
        background-color: #fff8e1;
        color: #856404;
    }

    h1, h4 {
        font-weight: 600;
    }

    .form-label {
        font-weight: 500;
    }

    input.form-control {
        box-shadow: none;
        border: 1px solid #ced4da;
    }

    .hover-shadow:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.08);
    }

    .no-gutters {
        margin-left: 0;
        margin-right: 0;
    }
</style>
